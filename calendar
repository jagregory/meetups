#!/usr/bin/env ruby

require 'json'
require 'net/http'
require 'optparse'
require 'time'
require 'oauth2'

API_KEY = ENV['API_KEY']
CLIENT_ID = ENV['CLIENT_ID']
OPTIONS = {}

OptionParser.new do |opts|
  opts.banner = "Usage: calendar [options]"
  opts.on('-c', '--calendar CALENDAR') {|v| OPTIONS[:calendar] = v }
end.parse!

def auth_token
  client = OAuth2::Client.new(
    CLIENT_ID,
    API_KEY,
    site: 'https://accounts.google.com',
    authorize_url: '/o/oauth2/auth',
    token_url:'/o/oauth2/token',
  )
  auth_url = client.auth_code.authorize_url(response_type: :code, redirect_uri: 'urn:ietf:wg:oauth:2.0:oob', scope: 'openid https://www.googleapis.com/auth/calendar.readonly', include_granted_scopes: true)

  `open "#{auth_url}"`

  puts "Enter your auth code: "
  auth_code = gets.chomp

  client.auth_code.get_token(auth_code, redirect_uri: 'urn:ietf:wg:oauth:2.0:oob')
end

def load_calendar_json
  token = auth_token()
  res = token.get "https://www.googleapis.com/calendar/v3/calendars/#{OPTIONS[:calendar]}/events?singleEvents=true"
  JSON.parse res.body
end

def parse_event(event)
  {
    name: event['summary'],
    time: (Time.parse(event['start']['dateTime']) if event['start']['dateTime']),
    creator: event['creator']['email']
  }
end

today = Date.today.to_time
next_week = (Date.today + 7).to_time

events = load_calendar_json['items']
  .map(&method(:parse_event))
  .select {|item| item[:time] } 

events.each do |event|
  name = event[:name].gsub(/\s/i, ' ')
  puts "#{event[:time]}\t#{name}\t#{event[:creator]}"
end
